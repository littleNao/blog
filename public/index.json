[{"content":"搭建时MySql相关版本配置与准备工作 华为云数据库MySQL版本：5.7.38\nMySQL canal账号创建： 可以在控制台通过网页进行创建 也可以通过命令创建： -- 连接华为云数据库（MySQL只有内网IP的情况） mysql -h内网地址 -P端口号 -uroot -p -- 新增canal用户 用户名：canal 密码：Canal@123456 CREATE USER \u0026#39;canal\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;Canal@123456\u0026#39;; -- 授权 *.*表示所有库 GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO \u0026#39;canal\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;Canal@123456\u0026#39;; -- 授权后，需要刷新权限 FLUSH PRIVILEGES; MySQL配置文件my.cnf设置：\ntip: 在华为云服务器上应该是默认开启的，没有找到设置项\n[mysqld] # 打开binlog log-bin=mysql-bin # 选择ROW(行)模式 binlog-format=ROW # 配置MySQL replaction需要定义，不要和canal的slaveId重复 server_id=1 如果修改了配置文件需要重启MySQL，重启后使用命令查看是否开启binlog模式：\nshow variables like \u0026#39;log_bin\u0026#39;; 显示为ON则表示开启成功\n查看binlog日志文件列表：\nshow binary logs; 查看当前正在写入的binlog文件：\nshow master status; 安装Canal-Deployer 下载canal-deployer安装包\n这里安装的是1.1.5版本：canal.deployer-1.1.5.tar.gz 服务器新建一个deployer目录，将文件上传到目录中并解压\ntar -zxvf canal.deployer-1.1.5.tar.gz 打开配置文件 conf/example/instance.properties ################################################# ## mysql serverId , v1.0.26+ will autoGen # canal.instance.mysql.slaveId=0 # enable gtid use true/false canal.instance.gtidon=false # MySQL服务器的IP地址与端口号 canal.instance.master.address=127.0.0.1:3306 # binlog日志名称 canal.instance.master.journal.name= # mysql主库链接时起始的binlog偏移量 canal.instance.master.position= canal.instance.master.timestamp= canal.instance.master.gtid= # rds oss binlog canal.instance.rds.accesskey= canal.instance.rds.secretkey= canal.instance.rds.instanceId= # table meta tsdb info canal.instance.tsdb.enable=true # 前面数据库授权的canal账号和密码 canal.instance.dbUsername=canal canal.instance.dbPassword=Canal@123456 canal.instance.connectionCharset = UTF-8 # enable druid Decrypt database password canal.instance.enableDruid=false # table regex canal.instance.filter.regex=.*\\\\..* # table black regex canal.instance.filter.black.regex=mysql\\\\.slave_.* canal.instance.master.journal.name=和canal.instance.master.position=\n这两个参数可以设置可以不设置，不设置表示从最新的binlog日志开始同步\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\n配置完成后通过sh bin/startup.sh启动deployer\n可以查看 logs/example/example.log 日志，启动成功提示： 2025-06-04 20:10:51.211 [main] INFO c.a.otter.canal.instance.spring.CanalInstanceWithSpring - start CannalInstance for 1-example 2025-06-04 20:10:51.227 [main] WARN c.a.o.canal.parse.inbound.mysql.dbsync.LogEventConvert - --\u0026gt; init table filter : ^.*\\..*$ 2025-06-04 20:10:51.227 [main] WARN c.a.o.canal.parse.inbound.mysql.dbsync.LogEventConvert - --\u0026gt; init table black filter : ^mysql\\.slave_.*$ 2025-06-04 20:10:51.240 [main] INFO c.a.otter.canal.instance.core.AbstractCanalInstance - start successful.... 到此deployer安装启动完成，但是只启动deployer是无法同步数据的，还需要启动adapter\n安装Canal-Adapter 下载canal-adapter安装包\n这里安装的是1.1.5版本：canal.adapter-1.1.5.tar.gz 与deployer同级新增adapter目录，将文件上传到目录中并解压\ntar -zxvf canal.adapter-1.1.5.tar.gz 编辑配置文件 conf/application.yml server: port: 8081 spring: jackson: date-format: yyyy-MM-dd HH:mm:ss time-zone: GMT+8 default-property-inclusion: non_null canal.conf: mode: tcp #tcp kafka rocketMQ rabbitMQ #flatMessage: true #zookeeperHosts: syncBatchSize: 1000 retries: 0 timeout: accessKey: secretKey: consumerProperties: # canal tcp consumer canal.tcp.server.host: 127.0.0.1:11111 #canal.tcp.zookeeper.hosts: canal.tcp.batch.size: 500 canal.tcp.username: canal.tcp.password: srcDataSources: defaultDS: # 需要同步的源数据库 url: jdbc:mysql://127.0.0.1:3306/xxx?useUnicode=true # 授权的canal账号和密码 username: canal password: Canal@123456 canalAdapters: # 实例名称 如果deployer没有修改这里保持默认值就可以 - instance: example # canal instance Name or mq topic name groups: # 适配器组ID。保持默认即可。 - groupId: g1 outerAdapters: # 适配器类型，我这里保持默认没有修改 - name: rdb # 适配器标识 可自定义 key: mysql1 # 目标库信息 properties: jdbc.driverClassName: com.mysql.jdbc.Driver jdbc.url: jdbc:mysql://127.0.0.1:3306/xxx?useUnicode=true jdbc.username: canal jdbc.password: Canal@123456 针对多表同步配置，在conf/rdb/目录下添加每个表的配置文件\n我这里需要同步3张表所已添加了3个配置文件，内容大致相同： # 源数据库标识 与application.yml文件中的srcDataSources保持一致。 dataSourceKey: defaultDS # 实例名称 与application.yml文件中的canalAdapters.instance保持一致。 destination: example # 适配器组ID 与application.yml文件中的canalAdapters.groups.groupId保持一致。 groupId: g1 # 适配器标识 与application.yml文件中的canalAdapters.groups.groupId.outerAdapters.key保持一致。 outerAdapterKey: mysql1 concurrent: true dbMapping: # 源数据库 database: sql_base # 源数据表 table: sql_depart # 目标数据表 targetTable: sql_committee targetPk: # 主键配置 # 源表主键名称: 目标表主键名称 id: id # 全量修改 mapAll: true sh bin/startup.sh命令启动adapter\ntail -f logs/adapter.log查看日志输出结果：\n2025-06-04 20:11:24.415 [main] INFO c.a.o.canal.adapter.launcher.loader.CanalAdapterLoader - Load canal adapter: rdb succeed 2025-06-04 20:11:24.423 [main] INFO c.alibaba.otter.canal.connector.core.spi.ExtensionLoader - extension classpath dir: /mnt/data/canal/adapter/plugin 2025-06-04 20:11:24.443 [main] INFO c.a.o.canal.adapter.launcher.loader.CanalAdapterLoader - Start adapter for canal-client mq topic: example-g1 succeed 2025-06-04 20:11:24.443 [main] INFO c.a.o.canal.adapter.launcher.loader.CanalAdapterService - ## the canal client adapters are running now ...... 2025-06-04 20:11:24.451 [main] INFO org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler [\u0026#34;http-nio-8081\u0026#34;] 2025-06-04 20:11:24.454 [Thread-4] INFO c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - =============\u0026gt; Start to connect destination: example \u0026lt;============= 2025-06-04 20:11:24.459 [main] INFO org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read 2025-06-04 20:11:24.624 [main] INFO o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path \u0026#39;\u0026#39; 2025-06-04 20:11:24.627 [main] INFO c.a.otter.canal.adapter.launcher.CanalAdapterApplication - Started CanalAdapterApplication in 3.303 seconds (JVM running for 3.714) 2025-06-04 20:11:24.737 [Thread-4] INFO c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - =============\u0026gt; Subscribe destination: example succeed \u0026lt;============= 到此adapter启动完成，数据同步开始\n踩坑记录 配置授权后没有使用FLUSH PRIVILEGES;命令刷新授权。 canal数据库密码设置过于复杂，启动时报错密码验证不通过。 只配置了deployer，没有配置adapter，导致可以看到同步记录却没有执行。 配置了过早的canal.instance.master.journal.name=和canal.instance.master.position= 导致启动时一直报错找不到同步节点。 这里如果不考虑旧的同步数据可以不设置，会从最新节点同步。\n如果不设置canal.instance.master.journal.name=和canal.instance.master.position= 要把deployer的/conf/example/目录下meta.bat文件删除，否则meta.bat文件会存有旧的节点数据。 2025.07.17 多库同步配置 修改 deployer/conf/canal.properties 配置文件 ################################################# ######### destinations ############# ################################################# # 配置多个通过,分割 canal.destinations = example,test1,test2 修改 adapter/conf/application.yml 配置文件 server: port: 8081 spring: jackson: date-format: yyyy-MM-dd HH:mm:ss time-zone: GMT+8 default-property-inclusion: non_null canal.conf: mode: tcp #tcp kafka rocketMQ rabbitMQ #flatMessage: true #zookeeperHosts: syncBatchSize: 1000 retries: 0 timeout: accessKey: secretKey: consumerProperties: # canal tcp consumer canal.tcp.server.host: 127.0.0.1:11111 #canal.tcp.zookeeper.hosts: canal.tcp.batch.size: 500 canal.tcp.username: canal.tcp.password: srcDataSources: defaultDS: # 需要同步的源数据库 url: jdbc:mysql://127.0.0.1:3306/db?useUnicode=true # 授权的canal账号和密码 username: canal password: Canal@123456 canalAdapters: # 实例名称 如果deployer没有修改这里保持默认值就可以 - instance: example # canal instance Name or mq topic name groups: # 适配器组ID。保持默认即可。 - groupId: g1 outerAdapters: # 适配器类型，我这里保持默认没有修改 - name: rdb # 适配器标识 可自定义 key: mysql1 # 目标库信息 properties: jdbc.driverClassName: com.mysql.jdbc.Driver jdbc.url: jdbc:mysql://127.0.0.1:3306/test1?useUnicode=true jdbc.username: canal jdbc.password: Canal@123456 # 与deployer/conf/canal.properties内多个名称保持一致 - instance: test1 # canal instance Name or mq topic name groups: # 适配器组ID。保持默认即可。 - groupId: g2 outerAdapters: # 适配器类型，我这里保持默认没有修改 - name: rdb # 适配器标识 可自定义 key: mysql2 # 目标库信息 properties: jdbc.driverClassName: com.mysql.jdbc.Driver jdbc.url: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true jdbc.username: canal jdbc.password: Canal@123456 canalAdapters为一个列表，多个库需要配置时设置多个instance即可\n","permalink":"http://localhost:1313/posts/linux/canal/","summary":"\u003ch3 id=\"搭建时mysql相关版本配置与准备工作\"\u003e搭建时MySql相关版本配置与准备工作\u003c/h3\u003e\n\u003cp\u003e华为云数据库MySQL版本：5.7.38\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMySQL canal账号创建：\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e可以在控制台通过网页进行创建\u003c/li\u003e\n\u003cli\u003e也可以通过命令创建：\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- 连接华为云数据库（MySQL只有内网IP的情况）\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003emysql \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003eh内网地址 \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003eP端口号 \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003euroot \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003ep\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- 新增canal用户 用户名：canal 密码：Canal@123456\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eCREATE\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eUSER\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;canal\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e@\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;%\u0026#39;\u003c/span\u003e IDENTIFIED \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Canal@123456\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- 授权 *.*表示所有库\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eGRANT\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eSELECT\u003c/span\u003e, REPLICATION SLAVE, REPLICATION CLIENT \u003cspan style=\"color:#66d9ef\"\u003eON\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e.\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eTO\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;canal\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e@\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;%\u0026#39;\u003c/span\u003e IDENTIFIED \u003cspan style=\"color:#66d9ef\"\u003eBY\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Canal@123456\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e-- 授权后，需要刷新权限\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003eFLUSH \u003cspan style=\"color:#66d9ef\"\u003ePRIVILEGES\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMySQL配置文件my.cnf设置：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003etip: 在华为云服务器上应该是默认开启的，没有找到设置项\u003c/p\u003e\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[mysqld]\n# 打开binlog\nlog-bin=mysql-bin\n# 选择ROW(行)模式\nbinlog-format=ROW\n# 配置MySQL replaction需要定义，不要和canal的slaveId重复\nserver_id=1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e如果修改了配置文件需要重启MySQL，重启后使用命令查看是否开启binlog模式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eshow\u003c/span\u003e variables \u003cspan style=\"color:#66d9ef\"\u003elike\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;log_bin\u0026#39;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e显示为ON则表示开启成功\u003c/p\u003e\n\u003cp\u003e查看binlog日志文件列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eshow\u003c/span\u003e binary logs;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e查看当前正在写入的binlog文件：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-SQL\" data-lang=\"SQL\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eshow\u003c/span\u003e master status;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"安装canal-deployer\"\u003e安装Canal-Deployer\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/alibaba/canal/releases/\"\u003e下载canal-deployer安装包\u003c/a\u003e\u003cbr\u003e\n这里安装的是1.1.5版本：canal.deployer-1.1.5.tar.gz\u003c/li\u003e\n\u003cli\u003e服务器新建一个deployer目录，将文件上传到目录中并解压\u003cbr\u003e\n\u003ccode\u003etar -zxvf canal.deployer-1.1.5.tar.gz\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e打开配置文件 conf/example/instance.properties\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-properties\" data-lang=\"properties\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#################################################\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e## mysql serverId , v1.0.26+ will autoGen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# canal.instance.mysql.slaveId=0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# enable gtid use true/false\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.gtidon\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# MySQL服务器的IP地址与端口号\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.master.address\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e127.0.0.1:3306\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# binlog日志名称\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.master.journal.name\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# mysql主库链接时起始的binlog偏移量\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.master.position\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.master.timestamp\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.master.gtid\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# rds oss binlog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.rds.accesskey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.rds.secretkey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.rds.instanceId\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# table meta tsdb info\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.tsdb.enable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 前面数据库授权的canal账号和密码\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.dbUsername\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003ecanal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.dbPassword\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eCanal@123456\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.connectionCharset\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003eUTF-8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# enable druid Decrypt database password\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.enableDruid\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# table regex\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.filter.regex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e.*\\\\..*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# table black regex\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecanal.instance.filter.black.regex\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003emysql\\\\.slave_.*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ecanal.instance.master.journal.name=\u003c/code\u003e和\u003ccode\u003ecanal.instance.master.position=\u003c/code\u003e\u003cbr\u003e\n这两个参数可以设置可以不设置，不设置表示从最新的binlog日志开始同步\u003cbr\u003e\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\u003cbr\u003e\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\u003cbr\u003e\n如果设置必须查看binlog日志列表是否存在，如果不存在运行会报错！！！\u003c/p\u003e","title":"Canal部署记录"}]